(function(){var e={62:function(){},701:function(){},659:function(){},982:function(){},412:function(){},941:function(){},370:function(){},997:function(){},117:function(){},54:function(){},607:function(){},681:function(){},545:function(){},539:function(){},889:function(){},179:function(){},405:function(){},147:function(){Shopware.Utils.GlobalFunctions={appLanguage:function(){return Shopware.Context.api.systemLanguageId},generateSlug:function(e){return e.toString().toLowerCase().trim().normalize("NFD").replace(/[\u0300-\u036f]/g,"").replace(/[^a-z0-9 ]/g,"").replace(/\s+/g,"-")},getActiveLangData:async function(e,t,i,l=!1){try{if(!e||!t)throw Error("Type and fkId are required.");let s=new Shopware.Data.Criteria;s.addFilter(Shopware.Data.Criteria.equals("type",e)),s.addFilter(Shopware.Data.Criteria.equals("fkId",t)),s.addFilter(Shopware.Data.Criteria.equals("languageId",i));let n=Shopware.Service("repositoryFactory").create("gisl_blog_translation"),o=await n.search(s,Shopware.Context.api);if(o&&o.length>0)return o[0];if(l)return this.getActiveLangData(e,t,this.appLanguage());return console.warn(`No active language data found for type: ${e} and fkId: ${t}`),null}catch(e){return console.error("Error fetching active language data:",e),null}},storeLanguageData:async function(e,t={}){try{let i;let{type:l,langId:s,title:n,slug:o,shortDescription:a,description:r,languageIdPk:g,meta_title:c,meta_description:d,meta_keywords:m}=t,p=Shopware.Service("repositoryFactory").create("gisl_blog_translation");if(g){if(!(i=await p.get(g,Shopware.Context.api)))return console.error("Translation not found with the provided ID:",g),!1}else i=p.create(Shopware.Context.api);return i.fkId=e,i.languageId=s||this.appLanguage(),i.type=l,i.title=n||"",i.slug=o||"",i.shortDescription=a||"",i.description=r||"",i.meta_title=c||"",i.meta_description=d||"",i.meta_keywords=m||"",i.updatedAt=new Date().toISOString(),await p.save(i,Shopware.Context.api),!0}catch(e){return console.error("An error occurred while saving language data:",e),!1}},validateUniqueSlug:async function(e,t){let i=new Shopware.Data.Criteria;i.addFilter(Shopware.Data.Criteria.equals("slug",e)),t&&i.addFilter(Shopware.Data.Criteria.not("AND",[Shopware.Data.Criteria.equals("id",t)]));let l=Shopware.Service("repositoryFactory").create("gisl_blog_translation");try{if((await l.search(i,Shopware.Context.api)).total>0)return{isValid:!1,error:"The slug you entered already exists"};return{isValid:!0,error:null}}catch(e){return console.error("Error validating unique slug:",e),{isValid:!1,error:"An error occurred while validating the slug"}}}}},691:function(e,t,i){var l=i(62);l.__esModule&&(l=l.default),"string"==typeof l&&(l=[[e.id,l,""]]),l.locals&&(e.exports=l.locals),i(346).Z("3256b241",l,!0,{})},664:function(e,t,i){var l=i(701);l.__esModule&&(l=l.default),"string"==typeof l&&(l=[[e.id,l,""]]),l.locals&&(e.exports=l.locals),i(346).Z("008e2f2f",l,!0,{})},742:function(e,t,i){var l=i(659);l.__esModule&&(l=l.default),"string"==typeof l&&(l=[[e.id,l,""]]),l.locals&&(e.exports=l.locals),i(346).Z("4f15b85a",l,!0,{})},626:function(e,t,i){var l=i(982);l.__esModule&&(l=l.default),"string"==typeof l&&(l=[[e.id,l,""]]),l.locals&&(e.exports=l.locals),i(346).Z("b4d402a2",l,!0,{})},298:function(e,t,i){var l=i(412);l.__esModule&&(l=l.default),"string"==typeof l&&(l=[[e.id,l,""]]),l.locals&&(e.exports=l.locals),i(346).Z("6d4593c4",l,!0,{})},22:function(e,t,i){var l=i(941);l.__esModule&&(l=l.default),"string"==typeof l&&(l=[[e.id,l,""]]),l.locals&&(e.exports=l.locals),i(346).Z("3de66c98",l,!0,{})},963:function(e,t,i){var l=i(370);l.__esModule&&(l=l.default),"string"==typeof l&&(l=[[e.id,l,""]]),l.locals&&(e.exports=l.locals),i(346).Z("68bb1469",l,!0,{})},85:function(e,t,i){var l=i(997);l.__esModule&&(l=l.default),"string"==typeof l&&(l=[[e.id,l,""]]),l.locals&&(e.exports=l.locals),i(346).Z("fbd98c08",l,!0,{})},338:function(e,t,i){var l=i(117);l.__esModule&&(l=l.default),"string"==typeof l&&(l=[[e.id,l,""]]),l.locals&&(e.exports=l.locals),i(346).Z("5eca79b2",l,!0,{})},850:function(e,t,i){var l=i(54);l.__esModule&&(l=l.default),"string"==typeof l&&(l=[[e.id,l,""]]),l.locals&&(e.exports=l.locals),i(346).Z("f7e80f64",l,!0,{})},821:function(e,t,i){var l=i(607);l.__esModule&&(l=l.default),"string"==typeof l&&(l=[[e.id,l,""]]),l.locals&&(e.exports=l.locals),i(346).Z("4e4e908f",l,!0,{})},652:function(e,t,i){var l=i(681);l.__esModule&&(l=l.default),"string"==typeof l&&(l=[[e.id,l,""]]),l.locals&&(e.exports=l.locals),i(346).Z("7eefee48",l,!0,{})},661:function(e,t,i){var l=i(545);l.__esModule&&(l=l.default),"string"==typeof l&&(l=[[e.id,l,""]]),l.locals&&(e.exports=l.locals),i(346).Z("81a37962",l,!0,{})},779:function(e,t,i){var l=i(539);l.__esModule&&(l=l.default),"string"==typeof l&&(l=[[e.id,l,""]]),l.locals&&(e.exports=l.locals),i(346).Z("c226a9a4",l,!0,{})},489:function(e,t,i){var l=i(889);l.__esModule&&(l=l.default),"string"==typeof l&&(l=[[e.id,l,""]]),l.locals&&(e.exports=l.locals),i(346).Z("73221d32",l,!0,{})},358:function(e,t,i){var l=i(179);l.__esModule&&(l=l.default),"string"==typeof l&&(l=[[e.id,l,""]]),l.locals&&(e.exports=l.locals),i(346).Z("0e5bb2b0",l,!0,{})},156:function(e,t,i){var l=i(405);l.__esModule&&(l=l.default),"string"==typeof l&&(l=[[e.id,l,""]]),l.locals&&(e.exports=l.locals),i(346).Z("14b18950",l,!0,{})},346:function(e,t,i){"use strict";function l(e,t){for(var i=[],l={},s=0;s<t.length;s++){var n=t[s],o=n[0],a={id:e+":"+s,css:n[1],media:n[2],sourceMap:n[3]};l[o]?l[o].parts.push(a):i.push(l[o]={id:o,parts:[a]})}return i}i.d(t,{Z:function(){return u}});var s="undefined"!=typeof document;if("undefined"!=typeof DEBUG&&DEBUG&&!s)throw Error("vue-style-loader cannot be used in a non-browser environment. Use { target: 'node' } in your Webpack config to indicate a server-rendering environment.");var n={},o=s&&(document.head||document.getElementsByTagName("head")[0]),a=null,r=0,g=!1,c=function(){},d=null,m="data-vue-ssr-id",p="undefined"!=typeof navigator&&/msie [6-9]\b/.test(navigator.userAgent.toLowerCase());function u(e,t,i,s){g=i,d=s||{};var o=l(e,t);return h(o),function(t){for(var i=[],s=0;s<o.length;s++){var a=n[o[s].id];a.refs--,i.push(a)}t?h(o=l(e,t)):o=[];for(var s=0;s<i.length;s++){var a=i[s];if(0===a.refs){for(var r=0;r<a.parts.length;r++)a.parts[r]();delete n[a.id]}}}}function h(e){for(var t=0;t<e.length;t++){var i=e[t],l=n[i.id];if(l){l.refs++;for(var s=0;s<l.parts.length;s++)l.parts[s](i.parts[s]);for(;s<i.parts.length;s++)l.parts.push(w(i.parts[s]));l.parts.length>i.parts.length&&(l.parts.length=i.parts.length)}else{for(var o=[],s=0;s<i.parts.length;s++)o.push(w(i.parts[s]));n[i.id]={id:i.id,refs:1,parts:o}}}}function b(){var e=document.createElement("style");return e.type="text/css",o.appendChild(e),e}function w(e){var t,i,l=document.querySelector("style["+m+'~="'+e.id+'"]');if(l){if(g)return c;l.parentNode.removeChild(l)}if(p){var s=r++;t=v.bind(null,l=a||(a=b()),s,!1),i=v.bind(null,l,s,!0)}else t=y.bind(null,l=b()),i=function(){l.parentNode.removeChild(l)};return t(e),function(l){l?(l.css!==e.css||l.media!==e.media||l.sourceMap!==e.sourceMap)&&t(e=l):i()}}var f=function(){var e=[];return function(t,i){return e[t]=i,e.filter(Boolean).join("\n")}}();function v(e,t,i,l){var s=i?"":l.css;if(e.styleSheet)e.styleSheet.cssText=f(t,s);else{var n=document.createTextNode(s),o=e.childNodes;o[t]&&e.removeChild(o[t]),o.length?e.insertBefore(n,o[t]):e.appendChild(n)}}function y(e,t){var i=t.css,l=t.media,s=t.sourceMap;if(l&&e.setAttribute("media",l),d.ssrId&&e.setAttribute(m,t.id),s&&(i+="\n/*# sourceURL="+s.sources[0]+" */\n/*# sourceMappingURL=data:application/json;base64,"+btoa(unescape(encodeURIComponent(JSON.stringify(s))))+" */"),e.styleSheet)e.styleSheet.cssText=i;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(i))}}}},t={};function i(l){var s=t[l];if(void 0!==s)return s.exports;var n=t[l]={id:l,exports:{}};return e[l](n,n.exports,i),n.exports}i.d=function(e,t){for(var l in t)i.o(t,l)&&!i.o(e,l)&&Object.defineProperty(e,l,{enumerable:!0,get:t[l]})},i.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},i.p="bundles/gislblog/",window?.__sw__?.assetPath&&(i.p=window.__sw__.assetPath+"/bundles/gislblog/"),function(){"use strict";i(147);let{Component:e}=Shopware;e.register("blog-aside",{template:'<ul>\n    <li v-for="option in options" :key="option.target">\n        <a \n            :class="option.name === activeRoute ? \'activeLink\' : \'link\'"\n            :href="\'#\' + option.target"\n        >\n            {{ option.name }}\n        </a>\n    </li>\n</ul>\n',data(){return{options:[{name:"Blog",target:"/blog/post/list"},{name:"Category",target:"/blog/category/list"},{name:"Author",target:"/blog/author/list"}]}},props:{activeRoute:{type:String,required:!0}}}),i(156);var t=JSON.parse('{"gisl":{"general":{"dailymotionLabel":"Dailymotion-Video","title":"Blog","titleLabel":"Titel","blogListing":"Blog Liste","description":"Blog hier verwalten","new":"Neu","save":"Speichern","update":"Aktualisieren","success":"Erfolg","error":"Fehler","common_error_message":"Es ist ein Fehler aufgetreten. Bitte versuchen Sie es sp\xe4ter noch einmal","common_delete_message":"Artikel erfolgreich gel\xf6scht!","paginationCount":"Anzahl der Paginierungen","sectionTitle":"Titel","allBlog":"Alle Blogs","buttonTitle":"Schaltfl\xe4chentitel","cms":{"title":"Blog","blogTitle":"Blog Liste","blogListAlert":"Der Blogeintrag wird hier im Storefront gerendert","blogDetailsTitle":"Blogdetails","blogDetailsAlert":"Blogdetails wird hier im Storefront gerendert","blogCategoryTitle":"Blog-Kategorie","blogCategoryListAlert":"Die Auflistung der Blog-Kategorien wird hier in der Storefront gerendert","blogShortDescription":"Blog-Kurzbeschreibung","blogDescription":"Blog-Beschreibung","blogShortDescriptionAlert":"Die Blog-Kurzbeschreibung wird hier im Storefront gerendert","generalMessage":"Der Inhalt des Blogeintrags wird automatisch vom Element abgerufen.","emptyResult":"Kein Artikel gefunden","showCategory":"Kategorie anzeigen","showTag":"Kategorie Etikett","relatedBlog":"Verwandter Blog","relatedBlogAlert":"Der zugeh\xf6rige Inhalt des Blogeintrags wird automatisch vom Element abgerufen.","recentBlog":"Aktueller Blog","showShare":"Teilen-Button anzeigen"}},"blog":{"title":"Blog","description":"Blog","saveMessage":"Blog erfolgreich erstellt","updateMessage":"Blog erfolgreich aktualisiert","cms":{"blogList":"Blog Liste Element"}},"author":{"title":"Autorin","saveMessage":"Autor erfolgreich erstellt","updateMessage":"Autor erfolgreich aktualisiert"},"category":{"title":"Kategorie","description":"Blog Kategorie","saveMessage":"Kategorie erfolgreich erstellt","updateMessage":"Kategorie erfolgreich aktualisiert"}}}'),l=JSON.parse('{"gisl":{"general":{"dailymotionLabel":"Dailymotion Video","title":"Blog","titleLabel":"Title","blogListing":"Blog List","description":"Manage blog here","new":"New","save":"Save","update":"Update","success":"Success","error":"Error","common_error_message":"Something went wrong please try again later","common_delete_message":"Item deleted successfully!","paginationCount":"Pagination count","sectionTitle":"Title","allBlog":"All Blog","buttonTitle":"Button Title","cms":{"title":"Blog","blogTitle":"Blog List","blogListAlert":"Blog listing will be rendered here in the storefront","blogDetailsTitle":"Blog Details","blogDetailsAlert":"Blog Details will be rendered here in the storefront","blogCategoryTitle":"Blog Category","blogCategoryListAlert":"Blog Category listing will be rendered here in the storefront","blogShortDescription":"Blog Short Description","blogDescription":"Blog Description","blogShortDescriptionAlert":"Blog Short Description will be rendered here in the storefront","generalMessage":"The blog listing content will be automatically fetched by the element.","emptyResult":"No, item found","showCategory":"Show Category","showTag":"Show Tag","relatedBlog":"Related Blog","relatedBlogAlert":"The related blog listing content will be automatically fetched by the element.","recentBlog":"Recent Blog","showShare":"Show share button"}},"blog":{"title":"Blog","description":"Blog author","saveMessage":"Blog created successfully","updateMessage":"Blog updated successfully","cms":{"blogList":"Blog Lists Element"}},"author":{"title":"Author","description":"Blog author","saveMessage":"Author created successfully","updateMessage":"Author updated successfully"},"category":{"title":"Category","description":"Blog category","saveMessage":"Category created successfully","updateMessage":"Category updated successfully"}}}');let{Component:s,Mixin:n}=Shopware,{Criteria:o}=Shopware.Data;s.register("blog-post-list",{template:'{% block blog_post_list %}\n\n<sw-page class="blog-post-list">\n\n    {% block blog_post_list_smart_bar_actions %}\n        <template #smart-bar-actions>\n            <languages  :languageId="languageId" @change="handleLanguageChange" />\n            <sw-button\n                variant="primary"\n                :routerLink="{ name: \'blog.post.create\' }"\n                > <sw-icon name="regular-plus-circle-s" /> {{ $tc(\'gisl.general.new\') }}\n            </sw-button>\n        </template>\n    {% endblock %}\n\n    <template #content>\n\n        <div class="item_row">\n\n            <div class="side_nav">\n                <blog-aside  activeRoute="Blog"/>\n            </div>\n\n            <div class="col-10">\n\n                <sw-data-grid\n                    :dataSource="items"\n                    :columns="columns"\n                    :showSelection="false"\n                    >\n                    <template #actions="{ item }">\n                        <sw-context-menu-item @click="onEditItem(item)">Edit</sw-context-menu-item>\n                        <sw-context-menu-item @click="postId = item.id; confirmModal = !confirmModal">Delete</sw-context-menu-item>\n                    </template>\n                </sw-data-grid>\n\n                 \n                <sw-pagination\n                    :currentPage="page"\n                    :total="total"\n                    :limit="limit"\n                    @page-change="onPageChange"\n                />\n            \n            </div>\n\n        </div>\n\n    </template>\n\n</sw-page>\n\n<sw-confirm-modal\n    v-if="confirmModal"\n    class="sw-my-component__confirm-delete-modal"\n    type="delete"\n    :text="\'Are you sure you want to delete this?\'"\n    @confirm="onDeleteItem()"\n    @close="confirmModal = !confirmModal"\n    @cancel="confirmModal = !confirmModal">\n</sw-confirm-modal>\n\n{% endblock %}',mixins:[n.getByName("notification")],snippets:{"de-DE":t,"en-GB":l},inject:["repositoryFactory"],data(){return{postId:null,items:[],total:0,limit:10,page:1,sortBy:"createdAt",sortDirection:"DESC",naturalSorting:!1,columns:[{property:"title",label:"Title",routerLink:"blog.post.create",width:"200px"},{property:"author",label:"Author",width:"100px"}],entity:"gisl_blog_post",confirmModal:!1,languageId:null}},methods:{async loadItems(){let e=new o(this.page,this.limit);e.addSorting(o.sort(this.sortBy,this.sortDirection,this.naturalSorting)),e.addAssociation("postAuthor"),this.repository=this.repositoryFactory.create(this.entity),this.repository.search(e,Shopware.Context.api).then(async e=>{if(e&&e.length>0)for(let t of(this.items=[],e)){let e=await Shopware.Utils.GlobalFunctions.getActiveLangData("blog",t.id,this.languageId,!0);this.items.push({id:t.id||null,title:e?.title||"",author:t?.postAuthor?.name||"",slug:e?.slug||"",meta_title:e?.meta_title||""})}})},onEditItem(e){let t=e.id;this.$router.push({name:"blog.post.create",params:{id:t}})},onPageChange(e){let{page:t,limit:i}=e;this.limit=i,this.page=t,this.loadItems()},async onDeleteItem(){let e=this.postId;if(!e){this.createNotificationError({title:this.$tc("gisl.general.error"),message:this.$tc("gisl.general.common_error_message")});return}try{let t=this.repositoryFactory.create(this.entity),i=this.repositoryFactory.create("gisl_blog_translation");if(!t||!i){this.createNotificationError({title:this.$tc("gisl.general.error"),message:this.$tc("gisl.general.common_error_message")});return}let l=new Shopware.Data.Criteria;for(let t of(l.addFilter(Shopware.Data.Criteria.equals("fkId",e)),await i.search(l,Shopware.Context.api)))await i.delete(t.id,Shopware.Context.api);await t.delete(e,Shopware.Context.api),this.confirmModal=!1,this.createNotificationSuccess({title:this.$tc("gisl.general.success"),message:this.$tc("gisl.general.common_delete_message")}),this.loadItems()}catch(e){console.error("Error deleting item:",e),this.createNotificationError({title:this.$tc("gisl.general.error"),message:this.$tc("gisl.general.common_error_message")})}},handleLanguageChange(e){this.languageId=e,this.loadItems()}},created(){this.loadItems()},computed:{itemRepository(){return this.repositoryFactory.create(this.entity)}},mounted(){this.languageId=Shopware.Utils.GlobalFunctions.appLanguage()}});let{Component:a}=Shopware;a.register("quill-editor",{template:'<div class="sw-field">\n    <label for="quill-editor">{{ name }}</label>\n    <div ref="quillContainer" class="quill-editor-container"></div>\n</div>\n',props:{name:{type:String,required:!0},value:{type:String,default:""}},data(){return{editor:null}},watch:{value(e){this.editor&&this.editor.root.innerHTML!==e&&(this.editor.root.innerHTML=e)}},mounted(){this.loadQuillResources().then(()=>{this.initializeEditor()})},methods:{loadQuillResources(){return Promise.all([new Promise((e,t)=>{let i=document.createElement("link");i.rel="stylesheet",i.href="https://cdn.quilljs.com/1.3.7/quill.snow.css",i.onload=e,i.onerror=t,document.head.appendChild(i)}),new Promise((e,t)=>{let i=document.createElement("script");i.src="https://cdn.quilljs.com/1.3.7/quill.min.js",i.onload=e,i.onerror=t,document.head.appendChild(i)})])},initializeEditor(){this.editor=new Quill(this.$refs.quillContainer,{theme:"snow",modules:{toolbar:[[{header:[1,2,3,4,5,6,!1]}],[{color:[]},{background:[]}],["bold","italic","underline","strike"],[{font:[]}],[{size:[]}],[{align:[]}],[{list:"ordered"},{list:"bullet"}],[{indent:"-1"},{indent:"+1"}],["blockquote"],["link","image","video"],["clean"]]}}),this.editor.root.innerHTML=this.value,this.editor.on("text-change",()=>{this.$emit("input",this.editor.root.innerHTML)})}}}),i(691);let{Component:r,Mixin:g,Context:c,Application:d}=Shopware,{Criteria:m}=Shopware.Data;r.register("blog-post-create",{template:'{% block blog_post_list %}\n\n<sw-page class="blog-post-create">\n\n    {% block blog_post_smart_bar_actions %}\n        <template #smart-bar-actions>\n            <span v-if="item.id">\n                <languages  :languageId="languageId" @change="handleLanguageChange" :isDisable="!item.id" />\n            </span>\n            <sw-button \n                :disabled="true" \n                :square="false" \n                :block="false"  \n                variant="primary" \n                :isLoading="true" \n                v-if="loading"\n                >\n                Processing...\n            </sw-button>\n\n            <sw-button\n                v-else\n                variant="primary"\n                @click="onSave"\n                >\n                <span v-if="item.id"><sw-icon name="regular-layer-group" /> {{ $tc(\'gisl.general.update\') }} </span>\n                <span v-else><sw-icon name="regular-save" /> {{ $tc(\'gisl.general.save\') }} </span>\n            </sw-button>\n        </template>\n    {% endblock %}\n\n    <template #content> \n\n        <sw-card :title="cardTitle">\n\n            <sw-text-field\n                label="Title"\n                v-model:value="item.title"\n                :required="true" \n                :placeholder="\'Enter blog title...\'"\n                :error="errors.title"\n                >\n            </sw-text-field>\n            \n            <sw-text-field\n                label="Slug"\n                v-model:value="item.slug"\n                :required="true" \n                :error="errors.slug"\n                :placeholder="\'Enter slug...\'"\n                >\n            </sw-text-field>\n\n            <sw-multi-select\n                label="Select category"\n                :options="categoryList"\n                v-model:value="item.categories"\n                :allow-new="true"\n                :allow-new-items="true"\n                :label-property="\'name\'"\n                :value-property="\'id\'"\n                placeholder="Select category"\n                :required="true" \n                >\n            </sw-multi-select>   \n\n            <sw-select-field\n                label="Select an author"\n                placeholder="Choose an author..."\n                v-model:value="item.authorId"\n                :options="authors"\n                :searchable="true"\n                :allow-clear="true"\n                :label-property="\'name\'"\n                :value-property="\'id\'"\n                :required="true" \n                :error="errors.authorId"\n            >\n            </sw-select-field>\n\n            <sw-datepicker\n                v-model:value="item.publishedAt"\n                label="Publish Date"\n                placeholder="Select publish date and time"\n                dateType="datetime"\n                :timePicker="false"\n                :datePicker="true"\n                :allowInput="true"\n                :clearable="true"\n                :required="true"\n                :error="errors.publishedAt"\n            />\n\n            <sw-textarea-field \n                v-model:value="item.shortDescription" \n                label="Short Description"\n                validation="required"\n                :required="true"\n                :error="errors.short_description"\n            />\n\n            <quill-editor name="Description" v-model="item.description" @input="updateDescription"></quill-editor>\n\n            <div class="inputLabel">\n                <h6>Tags</h6>\n                <sw-button\n                    variant="primary"\n                    title="New tag"\n                    @click="newTag"\n                    >\n                    <sw-icon name="regular-plus-circle-s" />\n                </sw-button>\n            </div>\n\n            <sw-multi-select\n                :options="tags"\n                v-model:value="item.tags"\n                :label-property="\'name\'"\n                :value-property="\'id\'"\n                placeholder="Select tags"\n                >\n            </sw-multi-select>\n            \n            <sw-media-field\n                v-model:value="item.mediaId"\n                label="Select or upload an image"\n                :media-upload-tag="\'blog-post-media\'"\n                :allow-multi-select="false"\n                type="button"\n            />\n            \n            <sw-switch-field v-model:value="item.active" label="Active"></sw-switch-field>\n\n            <h5> Meta Info </h5>\n            \n            <sw-text-field\n                label="Meta Title"\n                v-model:value="item.meta_title"\n                :placeholder="\'Enter meta title...\'"\n            >\n            </sw-text-field>\n\n            <sw-textarea-field\n                label="Meta Description"\n                v-model:value="item.meta_description"\n                :placeholder="\'Enter meta descriiption...\'"\n                >\n            </sw-textarea-field>\n\n            <sw-textarea-field\n                label="Meta keywords"\n                v-model:value="item.meta_keywords"\n                :placeholder="\'Enter meta keywords\'"\n            >\n            </sw-textarea-field>\n\n\n        </sw-card>\n\n    </template>\n        \n</sw-page>\n\n{% endblock %}',mixins:[g.getByName("notification"),g.getByName("placeholder")],snippets:{"de-DE":t,"en-GB":l},inject:["repositoryFactory","acl"],data(){return{item:{id:null,title:"",slug:"",shortDescription:"",description:"",publishedAt:"",active:!0,mediaId:null,authorId:null,categories:[],meta_title:"",meta_description:"",meta_keywords:"",tags:[]},errors:{title:null,slug:null,short_description:null,categories:null,authorId:null,publishedAt:null},languageId:null,languageIdPk:null,loading:!1,createdId:null,entity:"gisl_blog_post",authors:[],categoryList:[],tags:[],showMediaModal:!1}},methods:{async loadItem(){try{let e=this.item?.id;if(!e){console.warn("Item ID is not available.");return}let t=this.itemRepository;if(!t)throw Error("Item repository is not available.");let i=new m;i.setIds([e]);let l=await t.search(i,Shopware.Context.api);if(l&&l.length>0){let e=l[0];this.item={...this.item,...e},0===Object.keys(e.tags).length&&(this.item.tags=[]),0===Object.keys(e.categories).length&&(this.item.categories=[])}else{console.warn("Item not found with ID:",e);return}let s=await Shopware.Utils.GlobalFunctions.getActiveLangData("blog",e,this.languageId,!1);null!=s?(this.item={...this.item,title:s.title||"",slug:s.slug||"",description:s.description||"",shortDescription:s.shortDescription||"",meta_title:s.meta_title||"",meta_description:s.meta_description||"",meta_keywords:s.meta_keywords||""},this.languageIdPk=s.id||null):(this.item={...this.item,title:"",slug:"",description:"",shortDescription:"",meta_title:"",meta_description:"",meta_keywords:""},this.languageIdPk=null)}catch(e){this.createNotificationError({title:this.$tc("gisl.general.error"),message:this.$tc("gisl.general.common_error_message")})}},async onSave(){if(!await this.validateRequiredFields()){this.loading=!1;return}this.loading=!0;let{error:e}=await Shopware.Utils.GlobalFunctions.validateUniqueSlug(this.item.slug,this.languageIdPk);if(this.loading=!1,null!=e){this.createNotificationError({title:"Duplicate Slug",message:e});return}await this.updateItem()},async updateItem(){let e=this.itemRepository,t=!!this.item.id,i=t?await e.get(this.item.id):e.create(),l={":":"[CLONE]",",":"[COMMA]",";":"[SEMICLONE]"};this.item.description=this.item.description.replace(/<iframe/g,"[iframe]").replace(/<\/iframe>/g,"[/iframe]"),i.active=this.item.active,i.publishedAt=this.item.publishedAt,i.mediaId=this.item.mediaId,i.authorId=this.item.authorId,i.tags=this.item.tags,i.categories=this.item.categories;try{await e.save(i,Shopware.Context.api);let s=(await e.get(i.id,Shopware.Context.api)).id,n=this.item.description.replace(/src="([^"]*)"/g,(e,t)=>{let i=t.replace(/[:,;]/g,e=>l[e]);return`src="${i}"`}),o={type:"blog",languageIdPk:this.languageIdPk,langId:this.languageId,title:this.item.title,shortDescription:this.item.shortDescription,description:n,slug:this.item.slug,meta_title:this.item.meta_title,meta_description:this.item.meta_description,meta_keywords:this.item.meta_keywords};await Shopware.Utils.GlobalFunctions.storeLanguageData(s,o),this.createNotificationSuccess({title:this.$tc("gisl.general.success"),message:t?this.$tc("gisl.blog.updateMessage"):this.$tc("gisl.blog.saveMessage")}),this.$router.push({name:"blog.post.list"})}catch(e){this.createNotificationError({title:this.$tc("gisl.general.error"),message:this.$tc("gisl.general.common_error_message")})}finally{this.loading=!1}},checkIfId(){let e=this.$route.params.id;e&&(this.item.id=e,this.loadItem())},getAllAuthors(){let e=new m(1,500);return this.repositoryFactory.create("gisl_blog_author").search(e,Shopware.Context.api).then(e=>{this.authors=e}).catch(e=>{})},getAllTags(){let e=new m(1,500);return this.repositoryFactory.create("tag").search(e,Shopware.Context.api).then(e=>{this.tags=e}).catch(e=>{})},newTag(){this.$router.push({name:"sw.settings.tag.index"})},async getAllCategories(){let e=new m(1,500);this.repositoryFactory.create("gisl_blog_category").search(e,Shopware.Context.api).then(async e=>{if(e&&e.length>0)for(let t of(this.categoryList=[],e)){let e=await Shopware.Utils.GlobalFunctions.getActiveLangData("category",t.id,this.languageId,!0);this.categoryList.push({id:t.id||null,name:e?.title||""})}})},async validateRequiredFields(){let e=!0;return this.item.title?this.errors.title=null:(this.errors.title="Title is required",e=!1),this.item.categories?this.errors.title=null:(this.errors.title="Please choose a category",e=!1),this.item.slug?this.errors.slug=null:(this.errors.slug="Slug is required",e=!1),this.item.shortDescription?this.errors.short_description=null:(this.errors.short_description="Short description is required",e=!1),this.item.authorId?this.errors.slug=null:(this.errors.authorId="Author is required",e=!1),this.item.publishedAt?this.errors.publishedAt=null:(this.errors.publishedAt="Published date is required",e=!1),e},async validateUniqueSlug(){let e=new Shopware.Data.Criteria;e.addFilter(Shopware.Data.Criteria.equals("slug",this.item.slug)),this.item.id&&e.addFilter(Shopware.Data.Criteria.not("AND",[Shopware.Data.Criteria.equals("id",this.item.id)]));let t=this.itemRepository,i=await t.search(e,Shopware.Context.api);return i.total>0?this.errors.slug="The slug you entered already exists":this.errors.slug=null,this.loading=!1,0===i.total},updateDescription(e){this.item.description=e},handleLanguageChange(e){this.languageId=e,this.loadItem()}},watch:{"item.title":function(e,t){t&&e!==t&&(this.item.slug=Shopware.Utils.GlobalFunctions.generateSlug(this.item.title))}},computed:{itemRepository(){return this.repositoryFactory.create(this.entity)},cardTitle(){return this.item.id?`${this.$tc("gisl.general.update")} ${this.$tc("gisl.blog.title")}`:`${this.$tc("gisl.general.save")} ${this.$tc("gisl.blog.title")}`}},mounted(){this.languageId=Shopware.Utils.GlobalFunctions.appLanguage(),this.checkIfId(),this.getAllAuthors(),this.getAllCategories(),this.getAllTags()}});let{Module:p}=Shopware;p.register("blog-post",{type:"plugin",name:"blog-post",title:"gisl.blog.title",description:"gisl.blog.description",color:"#ff3d58",icon:"regular-content",entity:"gisl_blog_post",routes:{list:{component:"blog-post-list",path:"list"},create:{component:"blog-post-create",path:"create/:id?",meta:{parentPath:"blog.post.list"}}},navigation:[{id:"blog-post-list",label:"gisl.general.title",color:"#ff3d58",path:"blog.post.list",parent:"sw-content",position:100}]});let{Component:u,Mixin:h}=Shopware,{Criteria:b}=Shopware.Data;u.register("blog-author-list",{template:'{% block blog_author_list %}\n\n<sw-page class="blog-author-list">\n\n    {% block blog_author_list_smart_bar_actions %}\n        <template #smart-bar-actions>\n            <sw-button\n                variant="primary"\n                :routerLink="{ name: \'blog.author.create\' }"\n                ><sw-icon name="regular-plus-circle-s" /> {{ $tc(\'gisl.general.new\') }}\n            </sw-button>\n        </template>\n    {% endblock %}\n\n    <template #content>\n        <div class="item_row">\n            <div class="side_nav">\n                <blog-aside  activeRoute="Author"/>\n            </div>\n            <div class="col-10">\n\n                <sw-data-grid\n                    :dataSource="items"\n                    :columns="columns"\n                    :showSelection="false"\n                    >\n\n                    <template #actions="{ item }">\n                        <sw-context-menu-item @click="onEditItem(item)">Edit</sw-context-menu-item>\n                        <sw-context-menu-item @click="itemId = item.id; confirmModal = !confirmModal">Delete</sw-context-menu-item>\n                    </template>\n                </sw-data-grid>\n                \n                <sw-pagination\n                    :currentPage="page"\n                    :total="total"\n                    :limit="limit"\n                    @page-change="onPageChange"\n                />\n\n            </div>\n        </div>\n    </template>\n        \n</sw-page>\n\n<sw-confirm-modal\n    v-if="confirmModal"\n    class="sw-my-component__confirm-delete-modal"\n    type="delete"\n    :text="\'Are you sure you want to delete this?\'"\n    @confirm="onDeleteItem()"\n    @close="confirmModal = !confirmModal"\n    @cancel="confirmModal = !confirmModal">\n</sw-confirm-modal>\n\n{% endblock %}',mixins:[h.getByName("notification")],inject:["repositoryFactory"],data(){return{items:[],total:0,limit:10,page:1,sortBy:"createdAt",sortDirection:"DESC",naturalSorting:!1,columns:[{property:"name",label:"Title",routerLink:"blog.author.create"},{property:"description",label:"Description"}],entity:"gisl_blog_author",itemId:null,confirmModal:!1}},methods:{loadItems(){let e=new b(this.page,this.limit);e.addSorting(b.sort(this.sortBy,this.sortDirection,this.naturalSorting)),this.repository=this.repositoryFactory.create(this.entity),this.repository.search(e).then(e=>{this.items=e,this.total=e.total})},onEditItem(e){let t=e.id;this.$router.push({name:"blog.author.create",params:{id:t}})},onPageChange(e){let{page:t,limit:i}=e;this.limit=i,this.page=t,this.loadItems()},async onDeleteItem(){let e=this.itemId;if(!e){console.error("Item ID is undefined or null.");return}try{let t=this.repositoryFactory.create(this.entity);await t.delete(e,Shopware.Context.api),this.confirmModal=!1,this.createNotificationSuccess({title:this.$tc("gisl.general.success"),message:this.$tc("gisl.general.common_delete_message")}),this.loadItems()}catch(e){this.createNotificationError({title:this.$tc("gisl.general.error"),message:this.$tc("gisl.general.common_error_message")})}}},created(){this.loadItems()},itemRepository(){return this.repositoryFactory.create(this.entity)}});let{Component:w,Mixin:f}=Shopware,{Criteria:v}=Shopware.Data;w.register("blog-author-create",{template:'{% block blog_author_list %}\n\n<sw-page class="blog-author-create">\n\n    {% block blog_author_list_smart_bar_actions %}\n        <template #smart-bar-actions>\n            <sw-button \n                :disabled="true" \n                :square="false" \n                :block="false"  \n                variant="primary" \n                :isLoading="true" \n                v-if="loading"\n                >\n                Processing...\n            </sw-button>\n\n            <sw-button\n                v-else\n                variant="primary"\n                @click="onSave"\n                >\n                <span v-if="item.id"><sw-icon name="regular-layer-group" /> {{ $tc(\'gisl.general.update\') }} </span>\n                <span v-else><sw-icon name="regular-save" /> {{ $tc(\'gisl.general.save\') }} </span>\n            </sw-button>\n        </template>\n    {% endblock %}\n\n    <template #content> \n\n        <sw-card :title="cardTitle">\n            \n            <sw-text-field \n                v-model:value="item.name" \n                :required="true" \n                :error="errors.name"\n                label="Name" \n            />\n            \n            <sw-textarea-field \n                v-model:value="item.description" \n                label="Description"\n            />\n            \n            <sw-media-field\n                label="Select Media"\n                v-model:value="item.mediaId"\n                :allowMultiSelect="false"\n            />\n\n            <sw-switch-field v-model:value="item.active" label="Active"></sw-switch-field>\n\n        </sw-card>\n\n    </template>\n        \n</sw-page>\n\n{% endblock %}',mixins:[f.getByName("notification"),f.getByName("placeholder")],inject:["repositoryFactory","acl"],data(){return{item:{id:null,name:"",description:"",active:!0,mediaId:null},errors:{name:null},toastTitle:"",toastMessage:"",repository:"gisl_blog_author",loading:!1}},methods:{async loadItem(){let e=this.item.id,t=new v;t.setIds([e]),this.itemRepository.search(t).then(e=>{this.item=e[0]})},async onSave(){if(this.loading=!0,!await this.validateRequiredFields()){this.loading=!1;return}await this.updateItem()},async updateItem(){let e=this.itemRepository,t=!!this.item.id,i=t?await e.get(this.item.id):e.create();i.name=this.item.name,i.description=this.item.description,i.active=this.item.active,i.mediaId=this.item.mediaId;try{await e.save(i,Shopware.Context.api),this.createNotificationSuccess({title:this.$tc("gisl.general.success"),message:t?this.$tc("gisl.author.updateMessage"):this.$tc("gisl.author.saveMessage")}),this.$router.push({name:"blog.author.list"})}catch(e){this.createNotificationError({title:this.$tc("gisl.general.error"),message:this.$tc("gisl.general.common_error_message")})}finally{this.loading=!1}},async validateRequiredFields(){let e=!0;return this.item.name?this.errors.name=null:(this.errors.name="Name is required",e=!1),e},checkIfId(){let e=this.$route.params.id;e&&(this.item.id=e,this.loadItem())}},computed:{itemRepository(){return this.repositoryFactory.create(this.repository)},cardTitle(){return this.item.id?`${this.$tc("gisl.general.update")} ${this.$tc("gisl.author.title")}`:`${this.$tc("gisl.general.save")} ${this.$tc("gisl.author.title")}`}},mounted(){this.checkIfId()}}),Shopware.Module.register("blog-author",{type:"plugin",name:"blog-author",title:"gisl.author.title",description:"blog-author.general.description",color:"#ff3d58",icon:"regular-content",entity:"gisl_blog_author",snippets:{"de-DE":t,"en-GB":l},routes:{list:{component:"blog-author-list",path:"list"},create:{component:"blog-author-create",path:"create/:id?",meta:{parentPath:"blog.author.list"}}}});let{Component:y}=Shopware;y.register("languages",{template:'<select @change="handleLanguageChange($event)" id="language-select" v-model="languageId" :disabled="isDisable">\n    <option v-for="language in languageOptions" :value="language.id" :key="language.id" >{{ language.name }}</option>\n</select>\n',props:{languageId:{type:String,required:!0},isDisable:{type:Boolean,default:!1}},data(){return{selectedLanguage:null,languageOptions:[],isLoading:!1}},created(){this.loadLanguages()},methods:{async loadLanguages(){this.isLoading=!0;let e=Shopware.Service("repositoryFactory").create("language"),t=new Shopware.Data.Criteria;try{(await e.search(t,Shopware.Context.api)).map(e=>{this.languageOptions.push({id:e.id,name:e.name})})}catch(e){this.createNotificationError({title:"Error",message:"Could not load languages."})}finally{this.isLoading=!1}},handleLanguageChange(e){let t=e.target.value;this.$emit("change",t)}}});let{Component:_,Mixin:S}=Shopware,{Criteria:C}=Shopware.Data;_.register("blog-category-list",{template:'{% block blog_category_list %}\n\n<sw-page class="blog-category-list">\n\n    {% block blog_author_list_smart_bar_actions %}\n        <template #smart-bar-actions>\n            <languages  :languageId="languageId" @change="handleLanguageChange" />\n            <sw-button\n                variant="primary"\n                :routerLink="{ name: \'blog.category.create\' }">\n                <sw-icon name="regular-plus-circle-s" /> {{ $tc(\'gisl.general.new\') }}\n            </sw-button>\n        </template>\n    {% endblock %}\n\n    <template #content>\n\n        <div class="item_row">\n\n            <div class="side_nav">\n                <blog-aside  activeRoute="Category"/>\n            </div>\n            <div class="col-10">\n                <sw-data-grid\n                    :dataSource="items"\n                    :columns="columns"\n                    :showSelection="false"\n                    >\n\n                    <template #actions="{ item }">\n                        <sw-context-menu-item @click="onEditItem(item)">Edit</sw-context-menu-item>\n                        <sw-context-menu-item @click="categoryId = item.id; confirmModal = !confirmModal">Delete</sw-context-menu-item>\n                    </template>\n                </sw-data-grid>\n                \n                <sw-pagination\n                    :currentPage="page"\n                    :total="total"\n                    :limit="limit"\n                    @page-change="onPageChange"\n                />\n            </div>\n        </div>\n    </template>\n        \n</sw-page>\n<sw-confirm-modal\n    v-if="confirmModal"\n    class="sw-my-component__confirm-delete-modal"\n    type="delete"\n    :text="\'Are you sure you want to delete this?\'"\n    @confirm="onDeleteItem()"\n    @close="confirmModal = !confirmModal"\n    @cancel="confirmModal = !confirmModal">\n</sw-confirm-modal>\n{% endblock %}',mixins:[S.getByName("notification")],inject:["repositoryFactory"],data(){return{items:[],total:0,limit:10,page:1,sortBy:"createdAt",sortDirection:"DESC",naturalSorting:!1,columns:[{property:"name",label:"Title",routerLink:"blog.category.create"},{property:"slug",label:"Slug"},{property:"meta_title",label:"Meta Title"}],languageId:null,entity:"gisl_blog_category",categoryId:null,confirmModal:!1}},methods:{loadItems(){let e=new C(this.page,this.limit);e.addSorting(C.sort(this.sortBy,this.sortDirection,this.naturalSorting)),e.addAssociation("media"),this.repository=this.repositoryFactory.create(this.entity),this.repository.search(e,Shopware.Context.api).then(async e=>{if(e&&e.length>0)for(let t of(this.items=[],e)){let e=await Shopware.Utils.GlobalFunctions.getActiveLangData("category",t.id,this.languageId,!0);this.items.push({id:t.id||null,name:e?.title||"",slug:e?.slug||"",meta_title:e?.meta_title||""})}this.total=e.total||0})},onEditItem(e){let t=e.id;this.$router.push({name:"blog.category.create",params:{id:t}})},onPageChange(e){let{page:t,limit:i}=e;this.limit=i,this.page=t,this.loadItems()},async onDeleteItem(){let e=this.categoryId;if(!e){this.createNotificationError({title:this.$tc("gisl.general.error"),message:this.$tc("gisl.general.common_error_message")});return}try{let t=this.itemRepository,i=this.repositoryFactory.create("gisl_blog_translation");if(!t||!i){this.createNotificationError({title:this.$tc("gisl.general.error"),message:this.$tc("gisl.general.common_error_message")});return}let l=new Shopware.Data.Criteria;for(let t of(l.addFilter(Shopware.Data.Criteria.equals("fkId",e)),await i.search(l,Shopware.Context.api)))await i.delete(t.id,Shopware.Context.api);await t.delete(e,Shopware.Context.api),this.confirmModal=!1,this.createNotificationSuccess({title:this.$tc("gisl.general.success"),message:this.$tc("gisl.general.common_delete_message")}),this.loadItems()}catch(e){this.createNotificationError({title:this.$tc("gisl.general.error"),message:this.$tc("gisl.general.common_error_message")})}},handleLanguageChange(e){this.languageId=e,this.loadItems()}},created(){this.loadItems()},computed:{itemRepository(){return this.repositoryFactory.create(this.entity)}},mounted(){this.languageId=Shopware.Utils.GlobalFunctions.appLanguage()}});let{Component:x,Mixin:k}=Shopware,{Criteria:I}=Shopware.Data;x.register("blog-category-create",{template:'{% block blog_category_list %}\n\n<sw-page class="blog-category-create">\n\n    {% block blog_category_list_smart_bar_actions %}\n        <template #smart-bar-actions>\n            <languages  :languageId="languageId" @change="handleLanguageChange" :isDisable="!item.id" />\n            <sw-button \n                :disabled="true" \n                :square="false" \n                :block="false"  \n                variant="primary" \n                :isLoading="true" \n                v-if="loading"\n                >\n                Processing...\n            </sw-button>\n\n            <sw-button\n                v-else\n                variant="primary"\n                @click="onSave"\n                >\n                <span v-if="item.id"><sw-icon name="regular-layer-group" /> {{ $tc(\'gisl.general.update\') }} </span>\n                <span v-else><sw-icon name="regular-save" /> {{ $tc(\'gisl.general.save\') }} </span>\n            </sw-button>\n        </template>\n    {% endblock %}\n\n    <template #content> \n\n        <sw-card :title="cardTitle">\n\n            <sw-text-field \n                v-model:value="item.name" \n                :required="true" \n                :error="errors.name"\n                label="Name"\n            />\n            <sw-text-field \n                v-model:value="item.slug" \n                :required="true" \n                :error="errors.slug"\n                label="Slug" \n            />\n            \n            <sw-textarea-field \n                v-model:value="item.shortDescription" \n                label="Short Description"\n                :required="true"\n                :error="errors.short_description"\n            />\n\n            <sw-textarea-field \n                v-model:value="item.description" \n                label="Description"\n            />\n            \n            <sw-media-field\n                label="Select Media"\n                v-model:value="item.mediaId"\n                :allowMultiSelect="false"\n            />\n\n            <sw-switch-field v-model:value="item.active" label="Active"></sw-switch-field>\n\n            <sw-text-field \n                v-model:value="item.meta_title"\n                :error="errors.meta_title"\n                label="Meta Title" \n            />\n\n            <sw-textarea-field \n                v-model:value="item.meta_description" \n                label="Meta Description"\n            />\n\n            <sw-textarea-field \n                v-model:value="item.meta_keywords" \n                label="Meta Keywords"\n            />\n\n\n        </sw-card>\n\n    </template>\n        \n</sw-page>\n\n{% endblock %}',mixins:[k.getByName("notification"),k.getByName("placeholder")],inject:["repositoryFactory","acl"],data(){return{item:{id:null,name:"",slug:"",description:"",shortDescription:"",active:!0,mediaId:null,meta_title:"",meta_description:"",meta_keywords:""},errors:{name:null,slug:null,short_description:null},languageId:null,languageIdPk:null,toastTitle:"",toastMessage:"",repository:"gisl_blog_category",loading:!1}},methods:{async loadItem(){try{let e=this.item?.id;if(!e){console.warn("Item ID is not available.");return}let t=this.itemRepository;if(!t)throw Error("Item repository is not available.");let i=new I;i.setIds([e]);let l=await t.search(i,Shopware.Context.api);if(l&&l.length>0){let e=l[0];this.item={...this.item,id:e.id,active:e.active,mediaId:e.mediaId}}else{console.warn("Item not found with ID:",e);return}let s=await Shopware.Utils.GlobalFunctions.getActiveLangData("category",e,this.languageId,!1);null!=s?(this.item={...this.item,name:s.title||"",slug:s.slug||"",description:s.description||"",shortDescription:s.shortDescription||"",meta_title:s.meta_title||"",meta_description:s.meta_description||"",meta_keywords:s.meta_keywords||""},this.languageIdPk=s.id||null):(this.item={...this.item,name:"",slug:"",description:"",shortDescription:"",meta_title:"",meta_description:"",meta_keywords:""},this.languageIdPk=null)}catch(e){this.createNotificationError({title:this.$tc("gisl.general.error"),message:this.$tc("gisl.general.common_error_message")})}},async onSave(){if(!await this.validateRequiredFields()){this.loading=!1;return}this.loading=!0;let{error:e}=await Shopware.Utils.GlobalFunctions.validateUniqueSlug(this.item.slug,this.languageIdPk);if(this.loading=!1,null!=e){console.log("Error msg",e),this.createNotificationError({title:"Duplicate Slug",message:e});return}await this.updateItem()},async updateItem(){let e=this.itemRepository,t=!!this.item.id,i=t?await e.get(this.item.id):e.create();i.active=this.item.active,i.mediaId=this.item.mediaId;try{await e.save(i,Shopware.Context.api);let l=(await e.get(i.id,Shopware.Context.api)).id,s={type:"category",languageIdPk:this.languageIdPk,langId:this.languageId,title:this.item.name,shortDescription:this.item.shortDescription,description:this.item.description,slug:this.item.slug,meta_title:this.item.meta_title,meta_description:this.item.meta_description,meta_keywords:this.item.meta_keywords};await Shopware.Utils.GlobalFunctions.storeLanguageData(l,s),this.createNotificationSuccess({title:this.$tc("gisl.general.success"),message:t?this.$tc("gisl.category.updateMessage"):this.$tc("gisl.category.saveMessage")}),this.$router.push({name:"blog.category.list"})}catch(e){this.createNotificationError({title:this.$tc("gisl.general.error"),message:this.$tc("gisl.general.common_error_message")})}finally{this.loading=!1}},async validateRequiredFields(){let e=!0;return this.item.name?this.errors.name=null:(this.errors.name="Name is required",e=!1),this.item.slug?this.errors.slug=null:(this.errors.slug="Slug is required",e=!1),this.item.shortDescription?this.errors.short_description=null:(this.errors.short_description="Short description is required",e=!1),e},appLanguage(){let e=Shopware.Context.api.systemLanguageId;this.languageId=e},handleLanguageChange(e){this.languageId=e,this.loadItem()}},watch:{"item.name":function(e,t){t&&e!==t&&(this.item.slug=Shopware.Utils.GlobalFunctions.generateSlug(this.item.name))}},computed:{itemRepository(){return this.repositoryFactory.create(this.repository)},cardTitle(){return this.item.id?`${this.$tc("gisl.general.update")} ${this.$tc("gisl.category.title")}`:`${this.$tc("gisl.general.save")} ${this.$tc("gisl.category.title")}`}},created(){},mounted(){this.languageId=Shopware.Utils.GlobalFunctions.appLanguage();let e=this.$route.params.id;e&&(this.item.id=e,this.loadItem())}}),Shopware.Module.register("blog-category",{type:"plugin",name:"blog-category",title:"gisl.category.title",description:"gisl.category.description",color:"#ff3d58",icon:"regular-content",entity:"gisl_blog_category",snippets:{"de-DE":t,"en-GB":l},routes:{list:{component:"blog-category-list",path:"list"},create:{component:"blog-category-create",path:"create/:id?",meta:{parentPath:"blog.category.list"}}}});let{Component:D}=Shopware;D.override("sw-cms-sidebar",{template:"{% block sw_cms_sidebar_block_overview_category_options %} \n    {% parent %}\n    <option value=\"gisl-blog\">{{$tc('gisl.general.cms.title')}}</option>\n{% endblock %}"}),i(626),Shopware.Component.register("sw-cms-block-gisl-blog-listing",{template:'{% block gisl_cms_gisl_blog_listing %}\n    <div class="sw-cms-block-blog-listing">\n        <slot name="content"></slot>\n    </div>\n{% endblock %}'}),i(298),Shopware.Component.register("sw-cms-preview-gisl-blog-listing",{template:'<div class="sw-cms-preview-blog-listing">\n    <img style="width: 100%; height: 100%;" :src="assetFilter(\'gislblog/static/cms/preview/blog_listing.png\')" alt="{{ $tc(\'gisl.general.cms.blogTitle\') }}">\n</div>',computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}}),Shopware.Service("cmsService").registerCmsBlock({name:"gisl-blog-listing",label:"gisl.general.cms.blogTitle",category:"gisl-blog",component:"sw-cms-block-gisl-blog-listing",previewComponent:"sw-cms-preview-gisl-blog-listing",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{content:{type:"gisl-blog-listing"}}}),i(652),Shopware.Component.register("sw-cms-el-gisl-blog-listing",{template:'<div class="sw-cms-el-blog-listing">\n    <h2>{{ $tc(\'gisl.general.cms.blogTitle\') }}</h2>\n\n    <div>\n        <img style="width: 100%; height: 100%;" :src="assetFilter(\'gislblog/static/cms/preview/blog_listing.png\')" alt="{{ $tc(\'gisl.general.cms.blogTitle\') }}">\n    </div>\n</div>',computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});let{Component:B,Mixin:$}=Shopware;B.register("sw-cms-el-config-gisl-blog-listing",{template:'{% block gisl_cms_element_blog_listing_config %}\n<div class="sw-cms-el-config-blog">\n\n    {% block gisl_cms_element_blog_listing_config_paginationCount_field %}\n        <sw-number-field\n            numberType="int"\n            :step="1"\n            :min="1"\n            :max="null"\n            v-model:value="element.config.paginationCount.value"\n            :digits="2"\n            :allowEmpty="false"\n            :label="$tc(\'gisl.general.paginationCount\')">\n        </sw-number-field>\n    {% endblock %}\n\n</div>\n{% endblock %}',inject:["repositoryFactory"],mixins:[$.getByName("cms-element")],created(){this.createdComponent()},methods:{async createdComponent(){this.initElementConfig("gisl-blog-listing")}}}),Shopware.Service("cmsService").registerCmsElement({name:"gisl-blog-listing",label:"Blog Listing Element",component:"sw-cms-el-gisl-blog-listing",configComponent:"sw-cms-el-config-gisl-blog-listing",defaultConfig:{paginationCount:{source:"static",value:5}}}),Shopware.Component.register("sw-cms-block-gisl-blog-category",{template:'<template>\n    <div class="sw-cms-block-gisl-blog-listing">\n        <slot name="content"></slot>\n    </div>\n</template>'}),Shopware.Component.register("sw-cms-preview-gisl-blog-category",{template:'<div class="sw-cms-preview-blog-listing">\n    <img style="width: 100%; height: 100%;" :src="assetFilter(\'gislblog/static/cms/preview/blog_categories.png\')" alt="{{ $tc(\'gisl.general.cms.blogCategoryTitle\') }}">\n</div>',computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}}),Shopware.Service("cmsService").registerCmsBlock({name:"gisl-blog-category",label:"gisl.general.cms.blogCategoryTitle",category:"gisl-blog",component:"sw-cms-block-gisl-blog-category",previewComponent:"sw-cms-preview-gisl-blog-category",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{content:{type:"gisl-blog-category"}}}),Shopware.Component.register("sw-cms-el-gisl-blog-category",{template:'<div class="sw-cms-el-blog-listing">\n    <h2>{{ $tc(\'gisl.general.cms.blogCategoryTitle\') }}</h2>\n    <div>\n        <img style="width: 100%; height: 100%;" :src="assetFilter(\'gislblog/static/cms/preview/blog_categories.png\')" alt="{{ $tc(\'gisl.general.cms.blogCategoryTitle\') }}">\n    </div>\n</div>',computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});let{Component:M,Mixin:F}=Shopware;Shopware.Component.register("sw-cms-el-config-gisl-blog-category",{template:'{% block gisl_cms_element_blog_listing_config %}\n<div class="sw-cms-el-config-blog">\n\n    {% block gisl_cms_element_blog_listing_config_section_title_field %}\n        <sw-text-field\n            v-model:value="element.config.sectionTitle.value"\n            :digits="2"\n            :allowEmpty="false"\n            :label="$tc(\'gisl.general.sectionTitle\')">\n        </sw-text-field>\n    {% endblock %}\n\n</div>\n{% endblock %}',inject:["repositoryFactory"],mixins:[F.getByName("cms-element")],created(){this.createdComponent()},methods:{async createdComponent(){this.initElementConfig("gisl-blog-category")}}}),Shopware.Service("cmsService").registerCmsElement({name:"gisl-blog-category",label:"Blog Listing Element",component:"sw-cms-el-gisl-blog-category",configComponent:"sw-cms-el-config-gisl-blog-category",defaultConfig:{sectionTitle:{source:"static",value:"Category"}}}),Shopware.Component.register("sw-cms-block-gisl-blog-short-description",{template:'<template>\n    <div class="sw-cms-block-gisl-blog-listing">\n        <slot name="content"></slot>\n    </div>\n</template>'}),Shopware.Component.register("sw-cms-preview-gisl-blog-short-description",{template:'<div class="sw-cms-preview-blog-listing">\n    <img style="width: 100%; height: 100%;" :src="assetFilter(\'gislblog/static/cms/preview/blog_short_description.png\')" alt="{{ $tc(\'gisl.general.cms.blogShortDescription\') }}">\n</div>',computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}}),Shopware.Service("cmsService").registerCmsBlock({name:"gisl-blog-short-description",label:"gisl.general.cms.blogShortDescription",category:"gisl-blog",component:"sw-cms-block-gisl-blog-short-description",previewComponent:"sw-cms-preview-gisl-blog-short-description",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{content:{type:"gisl-blog-short-description"}}}),Shopware.Component.register("sw-cms-el-gisl-blog-short-description",{template:'<div class="sw-cms-el-blog-listing">\n    <h2>{{ $tc(\'gisl.general.cms.blogShortDescription\') }}</h2>\n    <div>\n        <img style="width: 100%; height: 100%;" :src="assetFilter(\'gislblog/static/cms/preview/blog_short_description.png\')" alt="{{ $tc(\'gisl.general.cms.blogShortDescription\') }}">\n    </div>\n</div>',computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});let{Component:L,Mixin:E}=Shopware;L.register("sw-cms-el-config-gisl-blog-short-description",{template:'{% block gisl_cms_element_blog_short_description_config %}\n<div class="sw-cms-el-config-blog">\n\n    {% block gisl_cms_element_blog_short_description_config_section_title_field %}\n        <sw-text-field\n            v-model:value="element.config.title.value"\n            :label="$tc(\'gisl.general.titleLabel\')">\n        </sw-text-field>\n        <sw-text-field\n            v-model:value="element.config.buttonName.value"\n            :label="$tc(\'gisl.general.buttonTitle\')">\n        </sw-text-field>\n        <sw-text-field\n            v-model:value="element.config.targetId.value"\n            label="Target Id">\n        </sw-text-field>\n\n        <sw-textarea-field\n            v-model:value="element.config.shortDescription.value"\n            label="Description">\n        </sw-textarea-field>\n    {% endblock %}\n</div>\n{% endblock %}',inject:["repositoryFactory"],mixins:[E.getByName("cms-element")],created(){this.createdComponent()},methods:{async createdComponent(){this.initElementConfig("gisl-blog-short-description")}}}),Shopware.Service("cmsService").registerCmsElement({name:"gisl-blog-short-description",label:"Blog Listing Element",component:"sw-cms-el-gisl-blog-short-description",configComponent:"sw-cms-el-config-gisl-blog-short-description",defaultConfig:{title:{source:"static",value:"Blog"},buttonName:{source:"static",value:"Read More"},targetId:{source:"static",value:"#gislBlogDescription"},shortDescription:{source:"static",value:"Short Description"}}}),Shopware.Component.register("sw-cms-block-gisl-blog-description",{template:'<template>\n    <div class="sw-cms-block-gisl-blog-listing">\n        <slot name="content"></slot>\n    </div>\n</template>'}),Shopware.Component.register("sw-cms-preview-gisl-blog-description",{template:'<div class="sw-cms-preview-blog-listing">\n    <img style="width: 100%; height: 100%;" :src="assetFilter(\'gislblog/static/cms/preview/blog_description.png\')" alt="{{ $tc(\'gisl.general.cms.blogDescription\') }}">\n</div>',computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}}),Shopware.Service("cmsService").registerCmsBlock({name:"gisl-blog-description",label:"gisl.general.cms.blogDescription",category:"gisl-blog",component:"sw-cms-block-gisl-blog-description",previewComponent:"sw-cms-preview-gisl-blog-description",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{content:{type:"gisl-blog-description"}}}),Shopware.Component.register("sw-cms-el-gisl-blog-description",{template:'<div class="sw-cms-el-blog-listing">\n    <h2>{{ $tc(\'gisl.general.cms.blogDescription\') }}</h2>\n    <div>\n        <img style="width: 100%; height: 100%;" :src="assetFilter(\'gislblog/static/cms/preview/blog_description.png\')" alt="{{ $tc(\'gisl.general.cms.blogDescription\') }}">\n    </div>\n</div>',computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}});let{Component:T,Mixin:A}=Shopware;T.register("sw-cms-el-config-gisl-blog-description",{template:'{% block gisl_cms_element_blog_description_config %}\n<div class="sw-cms-el-config-blog">\n    {% block gisl_cms_element_blog_description_config_section_title_field %}\n        <sw-text-field\n            v-model:value="element.config.title.value"\n            :label="$tc(\'gisl.general.titleLabel\')">\n        </sw-text-field>\n        <sw-text-field\n            v-model:value="element.config.targetId.value"\n            placeholder="Please do not use any space"\n            label="Target Id">\n        </sw-text-field>\n        <sw-textarea-field\n            v-model:value="element.config.description.value"\n            label="Description">\n        </sw-textarea-field>\n    {% endblock %}\n</div>\n{% endblock %}',inject:["repositoryFactory"],mixins:[A.getByName("cms-element")],created(){this.createdComponent()},methods:{async createdComponent(){this.initElementConfig("gisl-blog-description")}}}),Shopware.Service("cmsService").registerCmsElement({name:"gisl-blog-description",label:"Blog Description Element",component:"sw-cms-el-gisl-blog-description",configComponent:"sw-cms-el-config-gisl-blog-description",defaultConfig:{targetId:{source:"static",value:"gislBlogDescription"},title:{source:"static",value:"Blog"},description:{source:"static",value:"Blog Description"}}}),i(664),Shopware.Component.register("sw-cms-block-gisl-blog-details",{template:'{% block gisl_cms_gisl_blog_details %}\n    <div class="sw-cms-block-blog-details">\n        <slot name="blogDetail"></slot>\n    </div>\n{% endblock %}'}),i(742),Shopware.Component.register("sw-cms-preview-gisl-blog-details",{template:'<div class="sw-cms-preview-blog-details">\n    <sw-alert variant="info">\n        {{ $tc(\'gisl.general.cms.blogDetailsAlert\') }}\n    </sw-alert>\n</div>'}),Shopware.Service("cmsService").registerCmsBlock({name:"gisl-blog-details",label:"gisl.general.cms.blogDetailsTitle",category:"gisl-blog",component:"sw-cms-block-gisl-blog-details",previewComponent:"sw-cms-preview-gisl-blog-details",defaultConfig:{marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{blogDetail:"gisl-blog-details"}}),i(850),Shopware.Component.register("sw-cms-el-gisl-blog-details",{template:"<div class=\"sw-cms-el-blog-listing\">\n    <h2>{{ $tc('gisl.general.cms.blogDetailsTitle') }}</h2>\n    <sw-alert variant=\"info\">\n        {{ $tc('gisl.general.cms.blogDetailsAlert') }}\n    </sw-alert>\n</div>"}),i(821);let{Component:N,Mixin:q}=Shopware;N.register("sw-cms-el-config-gisl-blog-details",{template:'{% block gisl_cms_element_blog_details_config %}\n<div class="sw-cms-el-config-blog">\n\n    {% block gisl_cms_element_blog_details_config_paginationCount_field %}\n            <sw-checkbox-field\n                :label="$tc(\'gisl.general.cms.showCategory\')"\n                v-model:value="element.config.showCategory.value">\n            </sw-checkbox-field>\n\n            <sw-checkbox-field\n                :label="$tc(\'gisl.general.cms.showShare\')"\n                v-model:value="element.config.showShare.value">\n            </sw-checkbox-field>\n            \n    {% endblock %}\n\n</div>\n{% endblock %}',inject:["repositoryFactory"],mixins:[q.getByName("cms-element")],created(){this.createdComponent()},methods:{async createdComponent(){this.initElementConfig("gisl-blog-details")}}}),Shopware.Service("cmsService").registerCmsElement({name:"gisl-blog-details",label:"Blog Details Element",component:"sw-cms-el-gisl-blog-details",configComponent:"sw-cms-el-config-gisl-blog-details",defaultConfig:{showCategory:{source:"static",value:!0},showTag:{source:"static",value:!0},showShare:{source:"static",value:!0}}}),i(85),Shopware.Component.register("sw-cms-block-gisl-related-blog",{template:'{% block sw_cms_gisl_related_blog %}\n    <div class="sw-cms-block-blog-details">\n        <slot name="content"></slot>\n    </div>\n{% endblock %}'}),i(338),Shopware.Component.register("sw-cms-preview-gisl-related-blog",{template:'<div class="sw-cms-preview-blog-details">\n    <img :src="assetFilter(\'gislblog/static/cms/preview/blog_list.png\')" alt="Preview Image">\n</div>',computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}}),Shopware.Service("cmsService").registerCmsBlock({name:"gisl-related-blog",label:"gisl.general.cms.relatedBlog",category:"gisl-blog",component:"sw-cms-block-gisl-related-blog",previewComponent:"sw-cms-preview-gisl-related-blog",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{content:"gisl-related-blog"}}),i(489),Shopware.Component.register("sw-cms-el-gisl-related-blog",{template:'<div class="sw-cms-el-related-blog">\n    <h2>{{ $tc(\'gisl.general.cms.relatedBlog\') }}</h2>\n    <div>\n        <img style="width: 100%; height: 100%;" :src="assetFilter(\'gislblog/static/cms/preview/blog_list.png\')" alt="{{ $tc(\'gisl.general.cms.relatedBlog\') }}">\n    </div>\n</div>',computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}}),i(358);let{Component:R,Mixin:P}=Shopware;R.register("sw-cms-el-config-gisl-related-blog",{template:'{% block gisl_cms_element_related_blog_config %}\n<div class="sw-cms-el-config-related-blog">\n\n    {% block gisl_cms_element_related_blog_config %}\n    \n        <sw-text-field\n            v-model:value="element.config.sectionTitle.value"\n            :digits="2"\n            :allowEmpty="false"\n            :label="$tc(\'gisl.general.sectionTitle\')">\n        </sw-text-field>\n        \n    {% endblock %}\n\n</div>\n{% endblock %}',inject:["repositoryFactory"],mixins:[P.getByName("cms-element")],created(){this.createdComponent()},methods:{async createdComponent(){this.initElementConfig("gisl-related-blog")}}}),Shopware.Service("cmsService").registerCmsElement({name:"gisl-related-blog",label:"Blog Related Blog Element",component:"sw-cms-el-gisl-related-blog",configComponent:"sw-cms-el-config-gisl-related-blog",defaultConfig:{sectionTitle:{source:"static",value:"Related Blog"}}}),i(22),Shopware.Component.register("sw-cms-block-gisl-recent-blog",{template:'{% block sw_cms_gisl_recent_blog %}\n    <div class="sw-cms-block-recent-blog">\n        <slot name="content"></slot>\n    </div>\n{% endblock %}'}),i(963),Shopware.Component.register("sw-cms-preview-gisl-recent-blog",{template:'<div class="sw-cms-preview-blog-details">\n    <img :src="assetFilter(\'gislblog/static/cms/preview/blog_list.png\')" alt="Preview Image">\n</div>',computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}}),Shopware.Service("cmsService").registerCmsBlock({name:"gisl-recent-blog",label:"gisl.general.cms.recentBlog",category:"gisl-blog",component:"sw-cms-block-gisl-recent-blog",previewComponent:"sw-cms-preview-gisl-recent-blog",defaultConfig:{marginBottom:"20px",marginTop:"20px",marginLeft:"20px",marginRight:"20px",sizingMode:"boxed"},slots:{content:"gisl-recent-blog"}}),i(661),Shopware.Component.register("sw-cms-el-gisl-recent-blog",{template:'<div class="sw-cms-el-related-blog">\n    <h2>{{ $tc(\'gisl.general.cms.recentBlog\') }}</h2>\n    <div>\n        <img style="width: 100%; height: 100%;" :src="assetFilter(\'gislblog/static/cms/preview/blog_list.png\')" alt="{{ $tc(\'gisl.general.cms.relatedBlog\') }}">\n    </div>\n</div>',computed:{assetFilter(){return Shopware.Filter.getByName("asset")}}}),i(779);let{Component:U,Mixin:j}=Shopware;U.register("sw-cms-el-config-gisl-recent-blog",{template:'{% block gisl_cms_element_related_blog_config %}\n<div class="sw-cms-el-config-related-blog">\n\n    {% block gisl_cms_element_related_blog_config %}\n    \n        <sw-text-field\n            v-model:value="element.config.sectionTitle.value"\n            :digits="2"\n            :allowEmpty="false"\n            :label="$tc(\'gisl.general.sectionTitle\')">\n        </sw-text-field>\n        \n    {% endblock %}\n\n</div>\n{% endblock %}',inject:["repositoryFactory"],mixins:[j.getByName("cms-element")],created(){this.createdComponent()},methods:{async createdComponent(){this.initElementConfig("gisl-recent-blog")}}}),Shopware.Service("cmsService").registerCmsElement({name:"gisl-recent-blog",label:"Blog Recent Blog Element",component:"sw-cms-el-gisl-recent-blog",configComponent:"sw-cms-el-config-gisl-recent-blog",defaultConfig:{sectionTitle:{source:"static",value:"Recent Blog"}}})}()})();